1、什么是classloader类加载器
类加载器(ClassLoader)，用来加载 Java 类到 Java 虚拟机中；负责读取 Java 字节代码，并转换成 java.lang.Class 类的一个实例

2、一个类什么时候被加载
比如我们要运行springboot项目，首先要加载有main方法的类，然后又开启了自动配置，会把所有的配置类加载，其父类也要加载，遇到反射亚要加载
我们new bean也要加载。一句话只要用到了一个类，就会加载到内存

3、类加载器加载一个类的步骤
加载：根据查找路径找到相应的class文件然后导入；
检查：检查加载的class文件的正确性；
准备：给类中的静态变量分配内存空间、并赋予默认值
解析：虚拟机将常量池中的符号引用替换成直接引用的过程；
初始化：对静态变量和静态代码块执行初始化。

4、类加载器
启动类加载器，BootStrap ClassLoader 负责加载我们在机器上安装的jre目录下的核心类。即加载jre目录下lib中的类.C++代码开发。
扩展类加载器，Extension ClassLoader 负责加载jre/lib/ext下的类 java实现。由启动类加载器加载
应用程序类加载器，Application ClassLoader 负责加载classpath下的类，对于springboot项目来说基本就是maven的依赖类和自己写的类。java实现；由启动类加载器加载
自定义类加载器，实现ClassLoader
5、什么是双亲委派机制
java中默认有三个加载器启动类加载器、扩展类加载器、应用程序类加载器，他们是父子关系。启动类加载器最上层，扩展类加载器第二层
应用程序类加载器第三层，自定义类加载器最后。双亲委派是指假如应用程序类加载器要加载一个类，他先会委派给自己的父加载器去加载，最终传导
到启动类加载器去加载。如果父类加载器在自己的范围内加载不了，就下推到自己的子类加载器去加载。

6、双亲委派机制的好处？
可以避免重复加载某些类；保护程序安全，防止核心api被篡改

7、什么是破坏双亲委托模型？
要保证除了顶层的启动类加载器，其余的类加载器都应该有父加载器
子类加载器加载类时，要先委托给父类加载，再由自己加载。
不满足以上两个条件都算破坏了双亲委派模型

8、破坏双亲委派模型的例子
加载JDBC驱动类时候就是打破了破坏双亲委派模型，JDK中定义了Driver接口和一个DriverManager驱动管理器。
其中的Driver是由驱动厂商去实现的，比如mysql；
DriverManager会加载每个Driver实现类并管理他们，DriverManager是由启动类加载器加载的。
但是mysql的Driver是在ClassPath下,根据双亲委派模型启动类加载器是加载不到的；
因此只能在DriverManager里强行指定下层classloader来加载Driver实现类，而这就会打破双亲委派模型
通过用线程上下文类加载器实现在启动类加载器调用应用类加载器去加载Driver来完成的。








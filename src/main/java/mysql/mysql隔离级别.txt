事务（Transaction）是将一组操作封装成一个执行单元（封装到一起），这一个执一单元要么一起执行成功，要么一起失败，不会出现执行“一半”的情况。

当数据库有多个事务同时执行时可能会出现脏读、不可重复读、幻读的问题。
脏读：读到其他事务没有提交的数据
不可重复读：在一个事务中，多次读取同一个数据，看到的结果不一样（其他的事务修改了）
幻读：读取的记录数不一样

为了解决以上三个问题，就有了事务隔离级别
隔离级别：
读未提交 read uncommited  一个事务没有提交，其他事务就能看到其做的变更
读已提交 read commited    事务提交后，其他事务才能看到变更
可重复度 repeat read     一个事务看到的数据，总是和事务启动时看到的数据是一样的
串行化                     读加读锁，写加写锁。完全串行化

实现上，数据库会创建一个视图，读已提交是在每条sql执行前创建视图。可重复度是在事务启动时创建视图。

在可重复度隔离级别下是如何解决幻读的：
快照读：mvcc
当前读：next-key lock 间隙锁+行锁

由于可重复读是在事务启动时创建视图-快照。
所以在事务期间查询的都是“快照读”，不存在别的数据插入到当前事务中
“当前读”，是rr级别下的更新操作/加锁查询之前，会进行当前读，读取的是最新提交的数据。当前读下，有其他事务插入数据，会造成幻读


